@page "/"
@inject HttpClient Http
@inject ILogger<Index> logger
@using System.Text.Json
@using MudBlazor.TableBug.Shared
@using System.Diagnostics.CodeAnalysis;
<PageTitle>Weather forecast</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>


<MudTable T="WeatherForecast"
          ServerData="@(new Func<TableState, Task<TableData<WeatherForecast>>>(ServerReload))"
          Hover="true"
          SortLabel="Sort By"
          Elevation="0">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortLabel="date" T="WeatherForecast">Date</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="tempc" T="WeatherForecast">Temp. (C)</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="tempf" T="WeatherForecast">Temp. (F)</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="summary" T="WeatherForecast">Summary</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date">@context.Date</MudTd>
        <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
        <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
        <MudTd DataLabel="Summary">@context.Summary</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{50, 100}" />
    </PagerContent>
</MudTable>


@code {
    private async Task<TableData<WeatherForecast>> ServerReload( TableState state)
    {
        logger.LogInformation(JsonSerializer.Serialize(state));
        var res = await Http.PostAsJsonAsync<TableState>("WeatherForecast", state);

        return await res.Content.ReadFromJsonAsync<TableData<WeatherForecast>>();
    }
}
